syntax = "proto3";
option go_package = ".;proto";
option java_package = "com.github.go2o.rpc";

import "global.proto";
import "message/cart_dto.proto";

// 购物车服务
service CartService {
  // 批发购物车接口
  rpc WholesaleCartV1 (WsCartRequest) returns (Result) {
  }
  // 普通购物车接口
  rpc NormalCartV1 (NormalCartRequest) returns (Result) {
  }
  // 获取购物车,当购物车编号不存在时,将返回一个新的购物车
  rpc GetShoppingCart_ (CartCode) returns (SShoppingCart) {
  }
  // 放入购物车
  rpc PutInCart_ (CartItemRequest) returns (CartItemResponse) {
  }
  // 从购物车里删除指定数量商品
  rpc SubCartItem_ (CartItemRequest) returns (CartItemResponse) {
  }
  // 获取购物车结算信息
  rpc GetCartSettle_ (CartCode) returns (SettleMeta_) {
  }
  // 勾选商品结算
  rpc CheckSign_ (CheckSignRequest) returns (Result) {
  }
  // 更新购物车结算
  rpc PrepareSettlePersist_ (SettlePersistRequest) returns (Result) {
  }
}


message SettlePersistRequest {
  // 买家编号
  int64 BuyerId = 1;
  // 店铺编号
  int64 ShopId = 2;
  int64 PaymentOpt = 3;
  int64 DeliverOpt = 4;
  int64 AddressId = 5;
}
message CartItemRequest {
  // 买家编号
  int64 BuyerId = 1;
  // 购物车编码
  string CartCode = 2;
  //商品编号
  sint64 ItemId = 3;
  //SKU编号
  sint64 SkuId = 4;
  // 数量
  int32 quantity = 5;
}

message CheckSignRequest {
  int64 BuyerId = 1;
  string CartCode = 2;
  repeated SCheckCartItem Items = 3;
}

message CartCode {
  int64 BuyerId = 1;
  string CartCode = 2;
}

message SettleMeta_ {
  int64 PaymentOpt = 1;
  int64 DeliverOpt = 2;
  SettleShopMeta_ Shop = 3;
  SettleDeliverMeta_ Deliver = 4;
}

message SettleShopMeta_ {
  int64 ShopId = 1;
  string ShopName = 2;
  string Telephone = 3;
}


message SettleDeliverMeta_ {
  int64 Id = 1;
  string ConsigneeName = 2;
  string ConsigneePhone = 3;
  string Address = 4;
}